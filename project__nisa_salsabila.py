# -*- coding: utf-8 -*-
"""Project_ Nisa Salsabila.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1oheo_Rul3VdYyImsuAr0Jfa4fZVptxq4
"""

pip install nltk

#@title
pip install newspaper3k

# Import Library
from newspaper import Article
import random
import string
import nltk
from sklearn.feature_extraction.text import CountVectorizer 
from sklearn.metrics.pairwise import cosine_similarity
import numpy as np
import warnings
warnings.filterwarnings('ignore')

#Download package punkt
nltk.download('punkt', quiet=True)

article = Article('https://www.oracle.com/data-science/what-is-data-science/')
article.download()
article.parse()
article.nlp()
corpus = article.text
print(corpus)

#Tokenization
text = corpus
sentence_list = nltk.sent_tokenize(text)
print(sentence_list)

def greeting_response(text):
    text = text.lower()

    bot_greetings = ['whats up', 'hello', 'hi', 'hey', 'howdy']
    user_greetings = ['hi', 'hello', 'whats up', 'greetings', 'hey']

    for word in text.split():
      if word in user_greetings:
        return random.choice(bot_greetings)

def index_sort(list_var):
  length = len(list_var)
  list_index = list(range(0, length))

  x = list_var
  for i in range(length):
    for j in range(length):
      if x[list_index[i]] > x[list_index[j]]:
        #Swap
        temp = list_index[i]
        list_index[i] = list_index[j]
        list_index[j] = temp

  return list_index

def bot_response(user_input):
  user_input = user_input.lower()
  sentence_list.append(user_input)
  bot_response = ''
  cm = CountVectorizer().fit_transform(sentences_list)
  similarity_scores = cosine_similarity(cm[-1], cm)
  similarity_scores_list = similarity_scores.flatten()
  index = index_sort(similarity_scores_list)
  index = index[1:]
  response_flag = 0

  j = 0
  for i in range(len(index)):
    if similarity_scores_list[index[i]] > 0.0:
      bot_response = bot_response+' '+sentences_list[index[i]]
      response_flag = 1
      j = j+1
    if j > 2:
      break

    if response_flag == 0:
      bot_response = bot_response+' '+"I am sorry, I dont understand."

    sentence_list.remove(user_input)

    return bot_response

print('Nisa : I am Nisa, I will answer your question. If you want exit, type bye')

exit_list = ['exit, finish', 'bye', 'see ya', 'quit']

while(True):
  user_input = input()
  if user_input.lower() in exit_list:
    print('Nisa : Chat another time')
    break
  else:
    if greeting_response(user_input) != None:
      print('Nisa : '+greeting_response(user_input))
    else:
      print('Nisa : '+bot_response(user_input))